<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>애정</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-09-19T06:08:46.515Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Aejung</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>행렬의 덧셈</title>
    <link href="http://example.com/2021/09/19/arrayPlus/"/>
    <id>http://example.com/2021/09/19/arrayPlus/</id>
    <published>2021-09-19T05:22:09.000Z</published>
    <updated>2021-09-19T06:08:46.515Z</updated>
    
    <content type="html"><![CDATA[<h5 id="두-배열에-있는-Int값을-같은-행렬에-있는-수끼리-더해서-값을-return-시켜주기"><a href="#두-배열에-있는-Int값을-같은-행렬에-있는-수끼리-더해서-값을-return-시켜주기" class="headerlink" title="두 배열에 있는 Int값을 같은 행렬에 있는 수끼리 더해서 값을 return 시켜주기!!"></a>두 배열에 있는 Int값을 같은 행렬에 있는 수끼리 더해서 값을 return 시켜주기!!</h5><p>문제 설명</p><p>행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다. 2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요.</p><p>제한 조건</p><ul><li>행렬 arr1, arr2의 행과 열의 길이는 500을 넘지 않습니다.</li></ul><p>입출력 예</p><table><thead><tr><th>arr1</th><th>arr2</th><th>return</th></tr></thead><tbody><tr><td>[[1,2],[2,3]]</td><td>[[3,4],[5,6]]</td><td>[[4,6],[7,9]]</td></tr><tr><td>[[1],[2]]</td><td>[[3],[4]]</td><td>[[4],[6]]</td></tr></tbody></table><p>문제는 이렇게 되어있다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">func solution(_ arr1:[[Int]], _ arr2:[[Int]]) -&gt; [[Int]] &#123;</span><br><span class="line">    return []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>행렬의 같은 위치에 있는 숫자들끼리 더하면 되는 문제!</strong></p><p>이중 포문을 돌려 사용해주기</p><ol><li>행렬의 행만큼 첫번쨰 반복문 사용해주기</li><li>두번째 반복문에서 해당 행의 열만큼 또 반복문 돌려주기</li><li>arr1과 arr2의 숫자끼리 더해주기</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">func solution(_ arr1:[[Int]], _ arr2:[[Int]]) -&gt; [[Int]] &#123;</span><br><span class="line">    var result: [[Int]] = []</span><br><span class="line">    for i in 0..&lt;arr1.count &#123;</span><br><span class="line">        result[i].append([])</span><br><span class="line">        for j in 0..&lt;arr[i].count &#123;</span><br><span class="line">            result[i].append(arr1[i][j] + arr2[i][j])</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return result</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>result 배열안에 첫번째 행의 배열을 넣어주고 첫번째 행과 두번째 행끼리 더해줘서 return 시킨거다!</p><p>다른 사람의 문제풀이는</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">func solution(_ arr1:[[Int]], _ arr2:[[Int]]) -&gt; [[Int]] &#123;</span><br><span class="line">    return zip(arr1, arr2).map&#123;zip($0,$1).map&#123;$0+$1&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>이렇게 간단하게 되어있었다..^__^..</p><p><code>zip</code>을 사용하여 두 리스트끼리 짝지어 합쳐줄 수 있다고 한다.<br>arr1,arr2를 zip으로 합치면 같은 행의 배열끼리 짝이 지어진다.</p><p>ex) solution([[1,2],[2,3]],[[3,4],[5,6]])의 경우<br>배열의 첫번째끼리 ([1,2],[3,4]),([2,3],[5,6])끼리 묶어준다.<br>그뒤 다시 한번 zip($0,$1)을 해주면 zip을 통해 만들어진 배열의 첫번째끼리 묶은뒤 <code>map</code>으로 배열을 만들어준다.<br>그리고 map을 통해 안에 있는 것들을 각각 더해주는식으로 되어있다.</p><p>zip과 map에 대해서 더 알아봐야겠당…!</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h5 id=&quot;두-배열에-있는-Int값을-같은-행렬에-있는-수끼리-더해서-값을-return-시켜주기&quot;&gt;&lt;a href=&quot;#두-배열에-있는-Int값을-같은-행렬에-있는-수끼리-더해서-값을-return-시켜주기&quot; class=&quot;headerlink&quot; title</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>핸드폰 번호 가리기</title>
    <link href="http://example.com/2021/09/17/PhoneNum/"/>
    <id>http://example.com/2021/09/17/PhoneNum/</id>
    <published>2021-09-17T13:03:28.000Z</published>
    <updated>2021-09-17T13:19:18.646Z</updated>
    
    <content type="html"><![CDATA[<h4 id="핸드폰-번호-가리기"><a href="#핸드폰-번호-가리기" class="headerlink" title="핸드폰 번호 가리기"></a>핸드폰 번호 가리기</h4><p>프로그래머스에 나와있는 핸드폰 번호 가리기 !<br>나는 문자열을 잘라서 맨 마지막 4글자만 놔두고 앞에 글자만 *로 변경하려했었다.<br>근데 다른 사람들 문제 풀이를 보니 for문이나 바로 return 시켜서 넘기는 방식을 썼다.</p><p><strong>이건 for문을 이용한 문제풀이</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">func solution(_ phone_number:String) -&gt; String &#123;</span><br><span class="line">    var answer = String()</span><br><span class="line">    for _ in 0..&lt;phone_number.count-4&#123;</span><br><span class="line">        answer += &quot;*&quot;</span><br><span class="line">    &#125;</span><br><span class="line">    answer += phone_number.suffix(4)</span><br><span class="line">    return answer</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>이건 그냥 return을 하면서 repeating을 해주는것</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">func solution(_ phone_number:String) -&gt; String &#123;</span><br><span class="line">    return String(&quot;\(String(repeating: &quot;*&quot;, count: phone_number.count - 4))\(phone_number.suffix(4))&quot;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>간단하게 return을 할때 어떤걸 반복할거고 몇번을 반복할거냐라는거다.<br>그래서 <code>* 를 받은 인자의 값의 카운를 세고 suffix를 통해 뒤에서 4번째까지만 빼고 *</code> 를 변환해주는방법이다.</p><p>하나하나 풀어갈수록 배워가는 재미가 쏠쏠하당 ~ !</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;핸드폰-번호-가리기&quot;&gt;&lt;a href=&quot;#핸드폰-번호-가리기&quot; class=&quot;headerlink&quot; title=&quot;핸드폰 번호 가리기&quot;&gt;&lt;/a&gt;핸드폰 번호 가리기&lt;/h4&gt;&lt;p&gt;프로그래머스에 나와있는 핸드폰 번호 가리기 !&lt;br&gt;나는 문자열을 잘</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>x만큼 간격이 있는 n개의 숫자</title>
    <link href="http://example.com/2021/09/17/hexo-blog-post-1/"/>
    <id>http://example.com/2021/09/17/hexo-blog-post-1/</id>
    <published>2021-09-16T15:56:02.000Z</published>
    <updated>2021-09-16T16:44:30.692Z</updated>
    
    <content type="html"><![CDATA[<h4 id="x만큼-간격이-있는-n개의-숫자"><a href="#x만큼-간격이-있는-n개의-숫자" class="headerlink" title="x만큼 간격이 있는 n개의 숫자"></a>x만큼 간격이 있는 n개의 숫자</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">func solution(_ x:Int, _ n:Int) -&gt; [Int64] &#123;</span><br><span class="line">    return []</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>처음 시작하는 알고리즘문제이다.<br>x와 n값을 받아서 Int64로 변환한 후 return 시켜주는 방식이다.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">func solution(_ x:Int, _ n:Int) -&gt; [Int64] &#123;</span><br><span class="line">    return Array(1...n).map &#123; Int64($0 * x) &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Array(1…n)으로 1부터 n만큼 담고있는 배열을 만들고 map으로 1부터 n까지 x를 곱한걸 나누어서 넣어준다는 코드가 있었다.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;x만큼-간격이-있는-n개의-숫자&quot;&gt;&lt;a href=&quot;#x만큼-간격이-있는-n개의-숫자&quot; class=&quot;headerlink&quot; title=&quot;x만큼 간격이 있는 n개의 숫자&quot;&gt;&lt;/a&gt;x만큼 간격이 있는 n개의 숫자&lt;/h4&gt;&lt;figure class</summary>
      
    
    
    
    
    <category term="코딩테스트" scheme="http://example.com/tags/%EC%BD%94%EB%94%A9%ED%85%8C%EC%8A%A4%ED%8A%B8/"/>
    
  </entry>
  
</feed>
